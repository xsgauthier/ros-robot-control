<launch>
  <!-- GDB functionality -->
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />
  <arg name="use_tf_static" default="false"/>

  <remap from="/mobile_base_controller/cmd_vel" to="/cmd_vel"/>

  <param name="robot_description"
    command="$(find xacro)/xacro.py '/home/pi/control_ws/config/robot.xacro'" />

  <!-- Load joint controller configurations from YAML file to parameter server -->
  <rosparam file="/home/pi/control_ws/config/controller.yaml" command="load"/>

  <!-- Load hardware interface -->
  <node name="rrbot_hardware_interface" pkg="ros_control_boilerplate" type="rrbot_hw_main"
      output="screen" launch-prefix="$(arg launch_prefix)"/>


    <!-- Load controller manager -->
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false"
	  output="screen" args="spawn mobile_base_controller joint_state_controller" />

  <!-- convert joint states to TF transforms for rviz, etc -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
    respawn="false" output="screen">
       <param name="use_tf_static" value="$(arg use_tf_static)"/>
  </node>
<!--
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
  </node>
-->

  <node pkg="tf2_ros" type="static_transform_publisher" name="odom_to_map"
    args="0 0 0 0 0 0  /map /odom " />

</launch>

